language: cpp

matrix:
  include:
    - os: osx
      osx_image: xcode10
      compiler: clang
      env: CONFIG=Debug
    - os: osx
      osx_image: xcode10
      compiler: clang
      env: CONFIG=Release
    - os: linux
      dist: bionic
      sudo: required
      compiler: gcc
      env:
        - CONFIG=Debug
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: "ppa:beineri/opt-qt-5.12.3-bionic"
          packages:
            - build-essential
            - qt512-meta-full
            - libgl1-mesa-dev
    - os: linux
      dist: bionic
      sudo: required
      compiler: gcc
      env:
        - CONFIG=Release
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: "ppa:beineri/opt-qt-5.12.3-bionic"
          packages:
            - build-essential
            - qt512-meta-full
            - libgl1-mesa-dev

install:
  - export BUILD_NUMBER=$TRAVIS_BUILD_NUMBER
  - set
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      alias python=python3
      sudo pip install conan
    elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew update
      brew install conan
      brew install qt5
      brew link --force qt5
    fi
  - conan --version
  - conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan
  - conan remote add owl https://api.bintray.com/conan/zethon/owl

script:
  - JOBS=2
  - mkdir build
  - cd build

  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      source /opt/qt512/bin/qt512-env.sh;
    fi

  - conan install .. --build missing  -s compiler.cppstd=17 -s build_type=${CONFIG}
  - cmake .. -DCMAKE_BUILD_TYPE=${CONFIG} -DCMAKE_PREFIX_PATH=/usr/local/opt/qt5 -DBUILD_GUI=ON -DBUILD_CONSOLE=ON -DBUILD_TEST=ON
  - cmake --build . --config "${CONFIG}"
  - ctest -VV -C ${CONFIG} --schedule-random --output-on-failure

after_success:
  - |
    if [ "$TRAVIS_BRANCH" == "deploy" ] && [ "$CONFIG" == "Release" ]; then
      if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        cpack -G DEB --config Owl.CPackConfig.cmake
        cpack -G DEB --config OwlConsole.CPackConfig.cmake
        # For now, disable deployment of artifacts for Ubuntu
        # See: https://blog.travis-ci.com/2018-07-23-the-tale-of-ftp-at-travis-ci
        # find . -maxdepth 1 -name "*.deb" -exec curl -T "{}" ftp://ftp.owlclient.com/public_html/artifacts/build/ --user "${SFTP_USER}:${SFTP_PASSWORD}" --ftp-create-dirs --insecure \;
      elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        cpack -G Bundle --config Owl.CPackConfig.cmake
        cpack -G Bundle --config OwlConsole.CPackConfig.cmake
        find . -maxdepth 1 -name "*.dmg" -exec curl -T "{}" ftp://ftp.owlclient.com/public_html/artifacts/build/ --user "${SFTP_USER}:${SFTP_PASSWORD}" --ftp-create-dirs --insecure \;
      fi
    fi

notifactions:
  email:
    recipients:
      - builds@owl.dog
    on_success: never
    on_failure: always
